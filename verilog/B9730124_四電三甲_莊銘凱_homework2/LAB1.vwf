/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0ns\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1.0;
	SIMULATION_TIME = 1.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("product[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("product[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M";
}

SIGNAL("M[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M";
}

SIGNAL("M[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M";
}

SIGNAL("M[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M";
}

SIGNAL("M_id")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("M_id[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M_id";
}

SIGNAL("M_id[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M_id";
}

SIGNAL("M_id[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M_id";
}

SIGNAL("M_id[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "M_id";
}

SIGNAL("St")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("out_state")
{
	MEMBERS = "out_state[3]", "out_state[2]", "out_state[1]", "out_state[0]";
}

GROUP("control")
{
	MEMBERS = "control[3]", "control[2]", "control[1]", "control[0]";
}

GROUP("product")
{
	MEMBERS = "product[8]", "product[7]", "product[6]", "product[5]", "product[4]", "product[3]", "product[2]", "product[1]", "product[0]";
}

TRANSITION_LIST("product[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.16;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.32;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.24;
		LEVEL 0 FOR 0.18;
	}
}

TRANSITION_LIST("product[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.12;
		LEVEL 0 FOR 0.24;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.18;
	}
}

TRANSITION_LIST("product[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		LEVEL 1 FOR 0.12;
		LEVEL 0 FOR 0.32;
		LEVEL 1 FOR 0.12;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.18;
	}
}

TRANSITION_LIST("product[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.16;
		LEVEL 0 FOR 0.12;
		LEVEL 1 FOR 0.28;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.26;
	}
}

TRANSITION_LIST("product[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.06;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.12;
		LEVEL 1 FOR 0.28;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.18;
	}
}

TRANSITION_LIST("product[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.06;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.16;
		LEVEL 1 FOR 0.28;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 0.18;
	}
}

TRANSITION_LIST("product[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.32;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.12;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.18;
	}
}

TRANSITION_LIST("product[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.06;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.32;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.26;
	}
}

TRANSITION_LIST("product[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.14;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.52;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.18;
	}
}

TRANSITION_LIST("out_state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.04;
			LEVEL 0 FOR 0.04;
		}
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 0.08;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.04;
			LEVEL 1 FOR 0.04;
		}
		LEVEL 0 FOR 0.14;
	}
}

TRANSITION_LIST("out_state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.06;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.32;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.22;
	}
}

TRANSITION_LIST("out_state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.14;
		LEVEL 1 FOR 0.12;
		LEVEL 0 FOR 0.36;
		LEVEL 1 FOR 0.16;
		LEVEL 0 FOR 0.22;
	}
}

TRANSITION_LIST("out_state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.26;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.44;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.14;
	}
}

TRANSITION_LIST("control[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.3;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.48;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.14;
	}
}

TRANSITION_LIST("control[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.06;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.08;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.24;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.04;
			LEVEL 0 FOR 0.04;
		}
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.18;
	}
}

TRANSITION_LIST("control[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.08;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.32;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.04;
			LEVEL 0 FOR 0.04;
		}
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.22;
	}
}

TRANSITION_LIST("control[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 0.46;
	}
}

TRANSITION_LIST("M[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.52;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.52;
		LEVEL 0 FOR 0.48;
	}
}

TRANSITION_LIST("M_id[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M_id[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.52;
		LEVEL 1 FOR 0.4;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M_id[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("M_id[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 0.08;
	}
}

TRANSITION_LIST("St")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.48;
		LEVEL 1 FOR 0.04;
		LEVEL 0 FOR 0.44;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.02;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.02;
			LEVEL 1 FOR 0.02;
			LEVEL 0 FOR 0.02;
		}
		LEVEL 1 FOR 0.02;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 0.02;
			LEVEL 1 FOR 0.02;
		}
		LEVEL 0 FOR 0.02;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 0.02;
		}
		LEVEL 0 FOR 0.02;
		LEVEL 1 FOR 0.02;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 0.02;
			LEVEL 1 FOR 0.02;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "St";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "M[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "M[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "M[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "M[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "M_id";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "M_id[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "M_id[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "M_id[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "M_id[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "out_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "out_state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "out_state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "out_state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "out_state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "product";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "product[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "product[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

TIME_BAR
{
	TIME = 500;
	MASTER = TRUE;
}
;
