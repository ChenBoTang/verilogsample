module hw1 (s0,s1,












module counter ( out, enable, CLK, CLR, in, load, count);
input  CLK, CLR, load, count;
input  [3:0] in;
output enable;
output [3:0] out;
reg [3:0] out;
reg enable;

always @(posedge CLK )
begin
if (!CLR)
out <= 4'b0000;

else if (load)
    out = in;

else if(count) 
    {enable, out} = out + 1;
  
else
   out = out;
end   

endmodule
module MUX_4X1(sel, i0, i1, i2, i3, out);
input [2:0]i0, i1, i2, i3;
input [1:0]sel;
output [2:0]out;
reg [2:0]out;
always @(sel or i0 or i1 or i2 or i3)
case(sel)
2'b00: out = i0;
2'b01: out = i1;
2'b10: out = i2;
2'b11: out = i3;
endcase
endmodule