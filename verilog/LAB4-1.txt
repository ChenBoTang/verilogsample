module CLA(A, B, S, C0, C4);
input C0;
input [3:0]A, B;
output C4;
output [3:0]S;
wire [3:0]P, G, C;

assign P[0] = A[0] ^ B[0];
assign P[1] = A[1] ^ B[1];
assign P[2] = A[2] ^ B[2];
assign P[3] = A[3] ^ B[3];
assign G[0] = A[0] & B[0];
assign G[1] = A[1] & B[1];
assign G[2] = A[2] & B[2];
assign G[3] = A[3] & B[3];

CLAG CLAG1(C0, P, G, C);

assign S[0] = C0 ^ P[0];
assign S[1] = C[0] ^ P[1];
assign S[2] = C[1] ^ P[2];
assign S[3] = C[2] ^ P[3];
assign C4 = C[3];

endmodule

module CLAG(C0, P, G, C);
input C0;
input [3:0] P, G;
output [3:0] C;

assign C[0] = P[0] & C0 |G[0];
assign C[1] = (P[1] & G[0]) | (P[1] & P[0] & C0) | G[1];
assign C[2] = (P[2] & G[1]) | (P[2] & P[1] & G[0]) | (P[2] & P[1] & P[0] & C0) | G[2];
assign C[3] = (P[3] & G[2]) | (P[3] & P[2] & G[1]) | (P[3] & P[2] & P[1] & G[0]) | (P[3] & P[2] & P[1] & P[0] & C0) | G[3];
endmodule
